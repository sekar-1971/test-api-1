name: Kotlin PR Quality Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - feature-test

jobs:
  sonar_scan:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew sonar

  unit_tests:
    name: Kotlin Unit Tests
    runs-on: ubuntu-latest
    needs: sonar_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: ./gradlew test

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/test-results/test/

  manual_review_notice:
    name: Manual Review Reminder
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - name: Notify Manual Review Required
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            await github.rest.issues.createComment({
              issue_number: pr.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
‚úÖ SonarQube Analysis Completed  
‚úÖ Unit Tests Executed  

üîç **Please perform a manual code review before merging this PR.**`
            });
üîê Required Secrets
Go to Repository ‚Üí Settings ‚Üí Secrets and Variables ‚Üí Actions, and add:

SONAR_TOKEN: Your SonarQube project token

SONAR_HOST_URL: URL to your SonarQube server (e.g., http://<IP>:9000)

‚öôÔ∏è Prerequisites in Your Project
Sonar plugin in build.gradle.kts:

kotlin
Copy
Edit
plugins {
    id("org.sonarqube") version "4.4.1.3373"
}

sonarqube {
    properties {
        property("sonar.projectKey", "your-project-key")
        property("sonar.host.url", System.getenv("SONAR_HOST_URL"))
        property("sonar.login", System.getenv("SONAR_TOKEN"))
    }
}
./gradlew test should run your unit tests.